<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>发刊词</title>
      <link href="/2022/05/05/%E5%8F%91%E5%88%8A%E8%AF%8D/"/>
      <url>/2022/05/05/%E5%8F%91%E5%88%8A%E8%AF%8D/</url>
      
        <content type="html"><![CDATA[<p>大家好，欢迎来到我的博客，我叫洲洋。做一个简单的自我介绍吧，我本科就读黑龙江工程学院，我想如果你不是我们学校的师兄师弟的话，八成对这个学校会感到很陌生，这是一所哈尔滨本地的地方性的大学，我本人也已经毕业四年了，目前在东信北邮从事5GC方向的开发工作。</p><p>嘿嘿，这算是我的博客的发刊词吧！我会从以下三个方面来阐述，这是一个什么样的博客，我的愿景是什么，以及最重要的，通过阅读我的博客，屏幕前的你能收获到什么？</p><ul><li>我为什么要开始写作？</li><li>我要学习哪些内容呢？</li><li>如何学习这些知识点呢？</li><li>如何运用这些知识点呢？</li></ul><h2 id="我为什么要开始写作？"><a href="#我为什么要开始写作？" class="headerlink" title="我为什么要开始写作？"></a>我为什么要开始写作？</h2><p>我为什么要开始写作？</p><p>其实我的目的很简单就是为了能够提高工资，找到更好的工作，说到底就是为了<strong>钱</strong>嘛。</p><p>屏幕前的你不用担心，这些博客都是免费的，我主要是通过写博客来制作<strong>反馈机制</strong>。这个反馈机制是个十分重要的东西，我们每个人基本都上过学，并且都参加过大大小小各种各样的<strong>考试</strong>。考试就是一种反馈机制，你可以通过考试了解到自己是不是真正地掌握了某个知识点。</p><p>但是对于已经步入社会的我来说，我已经没有了考试这种反馈机制。<strong>那么我应该如何检验自己到底有没有真正理解书中内容呢？</strong> 这成为了我必须解决的问题。</p><p>过去一年当中，我买了不少计算机专业的书，大家已经也知道，买了很多书不代表真正理解书中内容，哪怕是看了不少书也没法说自己已经深入了解了。</p><p>不知道，大家没有听说过怎么一句话，叫<strong>你想要教会别人一样东西，首先你得自己先会</strong>。所以，我想把我自己学过的内容写成博客反馈出去，如果我能让大家都清楚地理解了我写的内容，那么我一定是会的。</p><h2 id="我要学习哪些内容呢？"><a href="#我要学习哪些内容呢？" class="headerlink" title="我要学习哪些内容呢？"></a>我要学习哪些内容呢？</h2><p>那么我要学习哪些内容呢？计算机相关的内容千千万，每天都会出现许多的新技术、新名词，前两年特别火爆的大数据、人工智能还有据说会改变人类未来的区块链等等，让人眼花缭乱、目不暇接。</p><p>还有那些动不动就是什么企业微服务架构、什么高并发解决方案之类的东西，给人一种只要你学过那些文章之后，立马就可以年薪百万，从此走向人生巅峰。</p><p>过去，在我上大学的时候和刚刚毕业一两年的时候，我也被以上我所提到的那些技术弄得心潮澎湃，买了不少网课，感觉自己马上就要年薪百万一样，后来发现全是扯淡。</p><p>我作为一个过来人，跟大家解释一个为什么学什么大数据、人工智能、区块链那些东西都是扯淡，以及为什么仅仅只是了解企业微服务架构、高并发解决方案也是远远不行的。</p><p><strong>当然啦，我这里给出的建议是针对于那些和我一样就读于普通二本大学以及不是专门学习以上上述专业的学生。</strong></p><p>首先，我要给大家举一个例子，大家都知道车吧，现在很多人都会开车，但不是每一个会开车的人，都知道车的每一个零部件是怎么造出来的。我想这个道理大家都应该懂吧。</p><p>如果拿会开车和知道如何造车来类比我们对于某一项技术的理解的话，那就是如何你仅仅只是会部署一个Hadoop，搭建一个spark，再了不起会弄一个Tensorflow跑一个深度学习的模型，<strong>那你仅仅只是会开车而已</strong>。如果你开的这辆车不碰巧出了问题，你根本就解决不了，因为你缺少对它工作原理的认识。</p><p>再说说什么微服务架构、高并发之类的，这些东西是严重依赖于工作经验的，重要的事情说三遍：<strong>严重依赖工作经验、严重依赖工作经验、严重依赖工作经验</strong>。</p><p>如果你是一个跟我一样毕业于一所很普通的大学，上学期间也没有什么机会去参加一些大厂的实习工作，也仅仅是看过一些微服务、高并发之类的网课的同学。还是那开车这件事做比喻，你仅仅只是会开车而已，如果你这辆车出了一点问题，你都解决不了。我知道，此时此刻的你也许会感到不服气，我想说的是，真实生产环境上会出现各种各样的问题。公司要的是能解决那些难题的人，而不是只会照本宣科。</p><p>以上这些建议各位同学不要学习的理由都是我这些年踩过的坑，那说了那么多重点来了。<strong>那我们应该学什么呢？</strong></p><p>我认为与其把时间消耗在那些总是变来变去的事情上，不如回归的远点，把基础打捞，这样子才能让我们在职业发展的道路上越走越远。</p><p><strong>何有为基础呢？</strong> 是指编程语言的语法吗？</p><p>我来谈谈我对基础知识的理解，我认为的基础知识是指那些永痕不变的东西或者说很难被改变的知识。</p><p><strong>举例来说，Java的框架经常迭代更新，但是Java永远都运行在JVM之上这是不变的；C&#x2F;C++的标准也经常迭代，但是C&#x2F;C++的编译器如何分配内存是轻易不变的。不管你是微服务还是高并发系统，永远都是运行在Linux之上的。</strong></p><p>这些永恒不变的知识，就是我们所需要好好学习的了。</p><h2 id="如何学习这些知识点呢？"><a href="#如何学习这些知识点呢？" class="headerlink" title="如何学习这些知识点呢？"></a>如何学习这些知识点呢？</h2><p>我想要明确如何学习这些知识点，首先我们需要明确学习的目的是为了什么，根据不同的目的学习的侧重点当然也会有所不同。</p><p>我写博客的主要目的就是为了提高自己的计算机基础理论知识，从而可以<strong>在职场上走的更远</strong>。</p><p>那么如何能保证我已经对知识点掌握的已经如火纯情的地步呢？我想就是让即使没有计算机专业背景的人也能理解那些高深的知识。</p><p>我想使用类比法、对比法和推演法进行学习。我逐个做一下解释说明。</p><h3 id="类比法"><a href="#类比法" class="headerlink" title="类比法"></a>类比法</h3><p>类比法就是将现实生活中的某些场景类比到计算机领域，比如说CPU的计算流程就可以类比成厨师炒菜，厨师想要炒菜，他肯定得知道菜在哪里？以及他应该如何炒菜？</p><p>我认为如果死记硬背CPU取指令的流程，CPU内部分为哪几个部件这样子是很容易忘记的。</p><h3 id="对比法"><a href="#对比法" class="headerlink" title="对比法"></a>对比法</h3><p>在计算机领域往往同一个问题有许多不同的解决方案，例如我们需要存储数据，就得用到数据库，数据库又分为好几种，有传统的关系型数据库orcale 、mysql还有pg，现在又有了非关系型数据库像mongodb等等。</p><p>只有了解了各个不同的解决方案之间的差别，我们才能根据自己实际的需求找到最适合自己的解决方案。</p><h3 id="推演法"><a href="#推演法" class="headerlink" title="推演法"></a>推演法</h3><p>我想从技术的原点触发，了解为什么会出现这样一个技术，它的出现是为了解决什么问题？这样子一步一步进行推演，让我们从最初的远点出发，看看计算机的世界是怎么发展到今天的。</p><h2 id="如何运用这些知识点呢？"><a href="#如何运用这些知识点呢？" class="headerlink" title="如何运用这些知识点呢？"></a>如何运用这些知识点呢？</h2><p>我想我们既然学习了某一个知识点，一定是要应用这个知识点去解决某种问题，如果一个知识点我们不知道如何运用，那我们学习这个知识就一点用也没有了。</p><p>如果只是把软件部署一遍，就觉得自己已经掌握了这项技术，我觉得这只能算是会开车，而我们的目的是学会造车。</p><p>我会从一个一个小例子出发，通过搭建微型系统的方式来帮助大家和我共同成长。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
